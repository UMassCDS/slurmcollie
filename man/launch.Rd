% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/launch.R
\name{launch}
\alias{launch}
\title{Launch batch jobs via Slurm on Unity}
\usage{
launch(
  call,
  reps = 1,
  repname = "rep",
  moreargs = list(),
  jobid = FALSE,
  resources = list(),
  local = FALSE,
  trap = TRUE,
  regdir = slu$regdir,
  comment = "",
  finish = NA
)
}
\arguments{
\item{call}{Name of function to call}

\item{reps}{Vector, list, or data frame to vectorize call over. If a named list or data frame,
the names must correspond to the function's arguments. If a vector or unnamed list, \code{repname}
is used.}

\item{repname}{Name of \code{reps} argument in function to be called, used only when \code{reps} is a
vector or unnamed list}

\item{moreargs}{a named list of additional arguments to the called function, not vectorized over}

\item{jobid}{If TRUE, the current \code{slurmcollie} job id is passed as \code{jobid}. You'll need to include
\code{jobid} as an argument to your function if you include this.}

\item{resources}{Named list of resources, overriding defaults in \code{batchtools.conf} (see Details)}

\item{local}{If TRUE, launch job locally instead of as a batch job, tying up the console while it
runs. The jobs database will be updated on completion, so no information will be saved to the
jobs database if the job is interrupted.}

\item{trap}{If TRUE, trap errors in local mode; if FALSE, use normal R error handling. Use this
for debugging. If you get unrecovered errors, the job won't be added to the jobs database. Has
no effect if local = FALSE.}

\item{regdir}{Directory containing \code{batchtools} registries; defaults to the \code{slurmcollie} \code{regdir} setting}

\item{comment}{Optional comment; will be recycled for multiple reps}

\item{finish}{Optional name of a function to run for completed jobs, for example \code{finish = 'sweep_fit'} to gather fit stats}
}
\description{
Launches one or more reps of an R function as batch jobs and updates jobs database to track jobs.
}
\details{
You can override the default resources (defined in \code{batchtools.conf.R} in your \code{slurmcollie}
\code{template} folder) with the \code{resources} option. Pass a named list. It can include any of the following:
\itemize{
\item \code{walltime} (any of \code{minutes}, \code{'mm:ss'}, \code{'hh:mm:ss'}, or \code{'days-hh:mm'})
\item \code{memory} (GB)
\item \code{ncpus} (number of CPUs to request)
\item \code{ngpus} (number of GPUs to request)
\item \code{partition.cpu} (partitions to request, e.g., \code{'cpu-preempt,cpu'})
}

Use \code{finish = 'function'} to name functions to, for example, update a parent database. The finish
function must take two arguments, \code{jobid} and \code{status}. These functions are called by \link{sweep_jobs} for
any newly-done jobs, whether they were successful or not. Finishing functions run in the user
console, so they should be quick--they're intended to update databases, not do actual work. You
can, of course, \code{launch} additional batch jobs from a finishing function.

Normally, jobs are launched via Slurm, but you can use \code{local = TRUE} to run them in the console,
which means you'll have to wait for them to complete.
}
